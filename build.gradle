import org.apache.tools.ant.filters.*

buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

jar {
	baseName = 'cloudwatch-logging'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	ext {
		logbackVersion = '1.1.6'
		slf4jApiVersion = '1.7.15'
		logStashLogbackEncoderVersion = '4.7'
	}
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.codehaus.groovy:groovy-all')
	compile("ch.qos.logback:logback-classic:$logbackVersion")
	compile("ch.qos.logback:logback-core:$logbackVersion")
	compile("ch.qos.logback:logback-access:$logbackVersion")
	compile("org.slf4j:slf4j-api:$slf4jApiVersion")
	compile("org.slf4j:jcl-over-slf4j:$slf4jApiVersion")
	compile("org.slf4j:log4j-over-slf4j:$slf4jApiVersion")
	compile("net.logstash.logback:logstash-logback-encoder:$logStashLogbackEncoderVersion")

	//perf4j
	compile("org.perf4j:perf4j:0.9.16")
	compile("commons-jexl:commons-jexl:1.1")

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

processResources {
		filter ReplaceTokens, tokens: [
				"app.name": project.name,
				"app.version": project.version
		]
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task buildDocker(type: Docker, dependsOn: build) {
	push = false
	applicationName = "monkey-codes/${jar.baseName}"
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}